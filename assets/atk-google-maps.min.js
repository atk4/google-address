!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("atk"),require("jQuery")):"function"==typeof define&&define.amd?define("atk.google.maps",["atk","jQuery"],e):"object"==typeof exports?exports["atk.google.maps"]=e(require("atk"),require("jQuery")):t["atk.google.maps"]=e(t.atk,t.jQuery)}(self,(function(t,e){return(()=>{"use strict";var i={952:e=>{e.exports=t},145:t=>{t.exports=e}},s={};function r(t){var e=s[t];if(void 0!==e)return e.exports;var o=s[t]={exports:{}};return i[t](o,o.exports,r),o.exports}r.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return r.d(e,{a:e}),e},r.d=(t,e)=>{for(var i in e)r.o(e,i)&&!r.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var o={};return(()=>{var t=r(952),e=r.n(t),i=function t(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var s,r,o;if(Array.isArray(e)){if((s=e.length)!=i.length)return!1;for(r=s;0!=r--;)if(!t(e[r],i[r]))return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===i.toString();if((s=(o=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(r=s;0!=r--;)if(!Object.prototype.hasOwnProperty.call(i,o[r]))return!1;for(r=s;0!=r--;){var a=o[r];if(!t(e[a],i[a]))return!1}return!0}return e!=e&&i!=i};const s="__googleMapsScriptId";var o;!function(t){t[t.INITIALIZED=0]="INITIALIZED",t[t.LOADING=1]="LOADING",t[t.SUCCESS=2]="SUCCESS",t[t.FAILURE=3]="FAILURE"}(o||(o={}));class a{constructor({apiKey:t,authReferrerPolicy:e,channel:r,client:o,id:n=s,language:l,libraries:h=[],mapIds:c,nonce:u,region:p,retries:d=3,url:g="https://maps.googleapis.com/maps/api/js",version:m}){if(this.CALLBACK="__googleMapsCallback",this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=t,this.authReferrerPolicy=e,this.channel=r,this.client=o,this.id=n||s,this.language=l,this.libraries=h,this.mapIds=c,this.nonce=u,this.region=p,this.retries=d,this.url=g,this.version=m,a.instance){if(!i(this.options,a.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(a.instance.options)}`);return a.instance}a.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?o.FAILURE:this.done?o.SUCCESS:this.loading?o.LOADING:o.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let t=this.url;return t+=`?callback=${this.CALLBACK}`,this.apiKey&&(t+=`&key=${this.apiKey}`),this.channel&&(t+=`&channel=${this.channel}`),this.client&&(t+=`&client=${this.client}`),this.libraries.length>0&&(t+=`&libraries=${this.libraries.join(",")}`),this.language&&(t+=`&language=${this.language}`),this.region&&(t+=`&region=${this.region}`),this.version&&(t+=`&v=${this.version}`),this.mapIds&&(t+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(t+=`&auth_referrer_policy=${this.authReferrerPolicy}`),t}deleteScript(){const t=document.getElementById(this.id);t&&t.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise(((t,e)=>{this.loadCallback((i=>{i?e(i.error):t(window.google)}))}))}loadCallback(t){this.callbacks.push(t),this.execute()}setScript(){if(document.getElementById(this.id))return void this.callback();const t=this.createUrl(),e=document.createElement("script");e.id=this.id,e.type="text/javascript",e.src=t,e.onerror=this.loadErrorCallback.bind(this),e.defer=!0,e.async=!0,this.nonce&&(e.nonce=this.nonce),document.head.appendChild(e)}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(t){if(this.errors.push(t),this.errors.length<=this.retries){const t=this.errors.length*Math.pow(2,this.errors.length);console.log(`Failed to load Google Maps script, retrying in ${t} ms.`),setTimeout((()=>{this.deleteScript(),this.setScript()}),t)}else this.onerrorEvent=t,this.callback()}setCallback(){window.__googleMapsCallback=this.callback.bind(this)}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach((t=>{t(this.onerrorEvent)})),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version)return console.warn("Google Maps already loaded outside @googlemaps/js-api-loader.This may result in undesirable behavior as options and script parameters may not match."),void this.callback();this.loading||(this.loading=!0,this.setCallback(),this.setScript())}}}const n=new class{static getInstance(){return this.instance}constructor(){return this.instance||(this.instance=this,this.version=()=>"4.0.0",this.map={api:null,loader:null}),this.instance}setMapLoader(t){this.map.loader?console.warn("Loader already set with libraries: ",this.map.loader.libraries):this.map.loader=new a(t)}loadGoogleApiCallback(t=(()=>{console.log("load")}),e={}){this.map.loader||this.setMapLoader(e),this.map.loader.loadCallback(t)}loadGoogleApi(t){return this.map.loader||this.setMapLoader(t),this.map.loader.load()}};Object.freeze(n);const l=n;var h=r(145),c=r.n(h);class u{constructor(t,e){this.$el=c()(t),this.$input=this.$el.find("input"),this.settings=e,this.autocomplete=null,this.fields=[],this.main()}main(){e().mapService.loadGoogleApi().then((t=>{this.initAutocomplete(t),this.$input.on("keydown",(function(t){13===t.keyCode&&(t.preventDefault(),t.stopPropagation())}))})),this.initField()}initAutocomplete(t){this.autocomplete=new t.maps.places.Autocomplete(this.$input[0]),this.settings.options&&this.autocomplete.setOptions(this.settings.options),this.settings.countryLimit&&this.autocomplete.setComponentRestrictions({country:this.settings.countryLimit}),this.autocomplete.setTypes(this.settings.types),this.settings.useBrowserLocation&&this.geoLocate(),this.autocomplete.addListener("place_changed",(()=>{this.setInputsValue(this.autocomplete.getPlace()),this.settings.autoClear&&this.$input.val(""),this.settings.callback(this.autocomplete)}))}initField(){const t=this.getInputsField().map((t=>{const e=this.settings.fieldMap.filter((e=>e.name===t.name));return e.length&&(t.value=e[0].value),t}));this.fields=t.filter((t=>t.name!==this.$input.attr("name")))}geoLocate(){navigator.geolocation&&navigator.geolocation.getCurrentPosition((t=>{const e={lat:t.coords.latitude,lng:t.coords.longitude},i=new google.maps.Circle({center:e,radius:t.coords.accuracy});this.autocomplete.setBounds(i.getBounds())}))}setInputsValue(t){this.fields.forEach((t=>{t.input.val("")})),null!=t&&t.address_components?this.fields.forEach((e=>{e.input.val(this.getFieldValue(e.value,t))})):this.$input.val("")}getFieldValue(t,e){let i="";return t.def.forEach(((s,r)=>{i+="lat"===s.type||"lng"===s.type?this.getLatLngFromPlace(s,e):this.getAddressComponentFromPlace(s,e),r<t.def.length-1&&t.glue&&(i+=t.glue)})),i}getAddressComponentFromPlace(t,e){var i;return(null===(i=e.address_components.filter((e=>e.types.includes(t.type)))[0])||void 0===i?void 0:i[t.prop])||""}getLatLngFromPlace(t,e){return e.geometry.location[t.type]()}getMappedFields(t){return t.map((t=>({input:this.$el.parents(this.settings.formSelector).find('input[name="'+t.name+'"]'),...t})))}getInputsField(){const t=this.$el.parents(this.settings.formSelector).find("input").filter(((t,e)=>this.settings.fieldMap.filter((t=>t.name===e.getAttribute("name"))).length>0||this.settings.supportFields.filter((t=>t===e.getAttribute("name"))).length>0));return Array.from(t,(t=>({input:c()(t),name:c()(t).attr("name"),value:{def:[{type:c()(t).attr("name"),prop:this.settings.useLongName?"long_name":"short_name"}]}})))}}u.DEFAULTS={options:null,formSelector:"div.ui.form",callback:t=>{},types:["address"],useBrowserLocation:!0,countryLimit:null,useLongName:!0,fieldMap:[],glue:" ",autoClear:!0,supportFields:["lat","lng","street_number","route","country","administrative_area_level_1","administrative_area_level_2","administrative_area_level_3","administrative_area_level_4","administrative_area_level_5","colloquial_area","locality","sublocality","sublocality_level_1","sublocality_level_2","sublocality_level_3","sublocality_level_4","sublocality_level_5","neighborhood","premise","subpremise","plus_code","postal_code","natural_feature","airport","park","point_of_interest","floor","establishment","landmark","parking","post_box","postal_town","room","street_address","bus_station","train_station","transit_station"]},void 0!==e()&&(e().registerPlugin("AddressLookup",u),e().mapService||(e().mapService=l))})(),o=o.default})()}));